"use strict";var precacheConfig=[["/atpweb/index.html","a781200885045303feaa4fb72ad67c26"],["/atpweb/static/css/main.a0aa7307.css","d44a2c364fef47fdba67d1d36dc9696d"],["/atpweb/static/js/main.76849d82.js","61e805b44d86ef3156f410e11f842f33"],["/atpweb/static/media/DYNOGRAPH.6e147be9.JPG","6e147be96cff9de6364484595602b27b"],["/atpweb/static/media/afback.bd7d129c.JPG","bd7d129c6d1cab4463bddc3b35836af5"],["/atpweb/static/media/afr.c34a9c1f.png","c34a9c1f321c7008ef7f46c90dd5a9d5"],["/atpweb/static/media/afront.35e62ad6.JPG","35e62ad6f37472bb2ad943b7eb444fb5"],["/atpweb/static/media/airm.58fbc64e.JPG","58fbc64e29d013b2430066c662ba5759"],["/atpweb/static/media/bback.488942cb.JPG","488942cb224ed7ee7a056ef5da90feef"],["/atpweb/static/media/bfront.92d6e537.JPG","92d6e53791a31df7317fdc9802d10eab"],["/atpweb/static/media/cmp.3edaadb3.png","3edaadb36298d4451a8e02769280f63c"],["/atpweb/static/media/fuel.c2c2fddf.JPG","c2c2fddf41aac56d88b23ecd44acd8dc"],["/atpweb/static/media/manif.306474c5.JPG","306474c5b011aa8f34a551988c863c95"],["/atpweb/static/media/map.6c322315.JPG","6c322315cdd03ff3a6ff019f178b00f1"],["/atpweb/static/media/phone.0c2a8af7.png","0c2a8af7260f2b01214b33d0f7f6d935"],["/atpweb/static/media/pwm.3782d074.JPG","3782d0742dd05b42856ea12abd132fc6"],["/atpweb/static/media/s200sx.8ed3cc08.JPG","8ed3cc08e9826aa4934b81ed591410be"],["/atpweb/static/media/tbo.d8b89b15.png","d8b89b1520a3ffadf9a34087cafe940d"],["/atpweb/static/media/twg.3f9c7271.JPG","3f9c7271f47ae0883f5f8856466f0b3d"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var r="/atpweb/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});